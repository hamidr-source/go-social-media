// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO "user" (
  email,
  password,
  is_admin,
  is_active
) VALUES (
  $1, $2, $3, $4
) RETURNING id, email, password, is_admin, is_active, created_at
`

type CreateUserParams struct {
	Email    sql.NullString `json:"email"`
	Password sql.NullInt32  `json:"password"`
	IsAdmin  sql.NullBool   `json:"is_admin"`
	IsActive sql.NullBool   `json:"is_active"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Email,
		arg.Password,
		arg.IsAdmin,
		arg.IsActive,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.IsAdmin,
		&i.IsActive,
		&i.CreatedAt,
	)
	return i, err
}
